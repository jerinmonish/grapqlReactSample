{"ast":null,"code":"var _jsxFileName = \"/var/www/html/jerin/gql/gpltuts/client/src/DisplayData.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY_ALL_USERS = gql`\n  query getAllUsers{\n    users {\n      id,\n      name,\n      age,\n      username,\n      nationality,\n      friends {\n        name,\n        age\n      }\n    }\n  }\n`;\n\nfunction DisplayData() {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_ALL_USERS);\n\n  if (loading) {\n    /*#__PURE__*/\n    _jsxDEV(\"h1\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this);\n  }\n\n  if (error) {\n    console.log(error);\n  }\n\n  if (data) {\n    console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && data.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n\n_s(DisplayData, \"RsAoF0jGW8x/4pnnopXB/YWtfZ8=\", false, function () {\n  return [useQuery];\n});\n\n_c = DisplayData;\nexport default DisplayData;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"sources":["/var/www/html/jerin/gql/gpltuts/client/src/DisplayData.js"],"names":["React","useQuery","gql","QUERY_ALL_USERS","DisplayData","data","loading","error","console","log","map","user","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AACA,MAAMC,eAAe,GAAGD,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;;AAgBA,SAASE,WAAT,GAAsB;AAAA;;AACpB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBN,QAAQ,CAACE,eAAD,CAAvC;;AACA,MAAGG,OAAH,EAAW;AACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;AACD,MAAGC,KAAH,EAAS;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AACD,MAAGF,IAAH,EAAQ;AACNG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD;;AACD,sBAAO;AAAA,cAAMA,IAAI,IAAIA,IAAI,CAACK,GAAL,CAAWC,IAAD,IAAQ;AACrC,0BAAO;AAAA,+BAAK;AAAA,+BAAWA,IAAI,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFoB;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD;;GAdQR,W;UACwBH,Q;;;KADxBG,W;AAgBT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nconst QUERY_ALL_USERS = gql`\n  query getAllUsers{\n    users {\n      id,\n      name,\n      age,\n      username,\n      nationality,\n      friends {\n        name,\n        age\n      }\n    }\n  }\n`\n\nfunction DisplayData(){\n  const {data, loading, error} = useQuery(QUERY_ALL_USERS);\n  if(loading){\n    <h1>Loading ...</h1>\n  }\n  if(error){\n    console.log(error);\n  }\n  if(data){\n    console.log(data);\n  }\n  return <div>{data && data.map( (user)=>{\n    return <div><h1>Name: {user.name}</h1></div>\n  } )}</div>\n}\n\nexport default DisplayData;"]},"metadata":{},"sourceType":"module"}