{"ast":null,"code":"var _jsxFileName = \"/var/www/html/jerin/gql/gpltuts/client/src/DisplayData.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY_ALL_USERS = gql`\n  query getAllUsers{\n    users {\n      id,\n      name,\n      age,\n      username,\n      nationality,\n      friends {\n        name,\n        age\n      }\n    }\n  }\n`;\nconst QUERY_ALL_MOVIES = gql`\n  query getAllMovies{\n    getAllMovies{\n      movies {\n        id,\n        name,\n        yearOfPub,\n        isInTheaters\n      }\n    }\n  }\n`;\n\nfunction DisplayData() {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_ALL_USERS);\n  const {\n    data: movieData,\n    loading: movieLoading,\n    error: movieError\n  } = useQuery(QUERY_ALL_MOVIES);\n\n  if (loading) {\n    /*#__PURE__*/\n    _jsxDEV(\"h1\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this);\n  }\n\n  if (error) {\n    console.log(error);\n  }\n\n  if (data) {\n    console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data && data.users.map((user, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: idx,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Username: \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Age: \", user.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Nationality: \", user.nationality]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    }), movieData && movieData.movies.map((movies, mvx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Movie Name:\", movies.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DisplayData, \"ow8ft/mbFsi6S0O4lmtptDZG03g=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = DisplayData;\nexport default DisplayData;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"sources":["/var/www/html/jerin/gql/gpltuts/client/src/DisplayData.js"],"names":["React","useQuery","gql","QUERY_ALL_USERS","QUERY_ALL_MOVIES","DisplayData","data","loading","error","movieData","movieLoading","movieError","console","log","users","map","user","idx","name","username","age","nationality","movies","mvx"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AACA,MAAMC,eAAe,GAAGD,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,MAAME,gBAAgB,GAAEF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,SAASG,WAAT,GAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CAACE,eAAD,CAAzC;AACA,QAAM;AAAEG,IAAAA,IAAI,EAAEG,SAAR;AAAmBF,IAAAA,OAAO,EAAEG,YAA5B;AAA0CF,IAAAA,KAAK,EAAEG;AAAjD,MAAgEV,QAAQ,CAACG,gBAAD,CAA9E;;AACA,MAAGG,OAAH,EAAW;AACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;AACD,MAAGC,KAAH,EAAS;AACPI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD;;AACD,MAAGF,IAAH,EAAQ;AACNM,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD;;AACD,sBACE;AAAA,eACGA,IAAI,IAAIA,IAAI,CAACQ,KAAL,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAOC,GAAP,KAAe;AACrC,0BACE;AAAK,QAAA,EAAE,EAAEA,GAAT;AAAA,gCACE;AAAA,+BAAWD,IAAI,CAACE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,mCAAeF,IAAI,CAACG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,8BAAUH,IAAI,CAACI,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,sCAAkBJ,IAAI,CAACK,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATQ,CADX,EAYGZ,SAAS,IAAIA,SAAS,CAACa,MAAV,CAAiBP,GAAjB,CAAqB,CAACO,MAAD,EAASC,GAAT,KAAgB;AACjD,0BACE;AAAA,+BACE;AAAA,oCAAgBD,MAAM,CAACJ,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANa,CAZhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAlCQb,W;UAC0BJ,Q,EACqCA,Q;;;KAF/DI,W;AAoCT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nconst QUERY_ALL_USERS = gql`\n  query getAllUsers{\n    users {\n      id,\n      name,\n      age,\n      username,\n      nationality,\n      friends {\n        name,\n        age\n      }\n    }\n  }\n`\n\nconst QUERY_ALL_MOVIES= gql`\n  query getAllMovies{\n    getAllMovies{\n      movies {\n        id,\n        name,\n        yearOfPub,\n        isInTheaters\n      }\n    }\n  }\n`\n\nfunction DisplayData(){\n  const { data, loading, error } = useQuery(QUERY_ALL_USERS);\n  const { data: movieData, loading: movieLoading, error: movieError } = useQuery(QUERY_ALL_MOVIES);\n  if(loading){\n    <h1>Loading ...</h1>\n  }\n  if(error){\n    console.log(error);\n  }\n  if(data){\n    console.log(data);\n  }\n  return (\n    <div>\n      {data && data.users.map((user, idx) => {\n        return (\n          <div id={idx}>\n            <h1>Name: {user.name}</h1>\n            <h1>Username: {user.username}</h1>\n            <h1>Age: {user.age}</h1>\n            <h1>Nationality: {user.nationality}</h1>\n          </div>\n        );\n      })}\n\n      {movieData && movieData.movies.map((movies, mvx)=> {\n        return (\n          <div>\n            <h1>Movie Name:{movies.name}</h1>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default DisplayData;"]},"metadata":{},"sourceType":"module"}